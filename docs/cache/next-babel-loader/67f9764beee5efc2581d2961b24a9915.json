{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\n/**\n * NAV\n * INFO: App navbar classes, links,useBrandOrTitle, brand are set in ./src/config/conf.json\n * SET: classes for dynamic styling, for static styling nav.scss\n * SET: useBrandOrTitle to \"brand\" or \"title\":\n *  IF useBrandOrTitle set to \"brand\" then display custom and static brand attribute in ./src/config/conf.json \n *  TODO: IF useBrandOrTitle set to \"title\" then dynamically display \"title\" attribute per current link\n */\nimport React, { Component } from 'react';\nimport NavBarBrand from './_navbar-brand';\nimport NavBarLeft from './_navbar-left';\nimport NavBarRight from './_navbar-right';\n\nvar Nav =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Nav, _Component);\n\n  function Nav(props) {\n    var _this;\n\n    _classCallCheck(this, Nav);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Nav).call(this, props)); // console.log('NAV props: ', props);\n    // this.navLinks = this.props.config.links;\n\n    _defineProperty(_assertThisInitialized(_this), \"navLinks\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleBrandDisplay\", function () {\n      switch (_this.props.useBrandOrTitle) {\n        case 'brand':\n          return _this.props.brand;\n\n        case 'title':\n          return _this.props.title;\n\n        case 'none':\n          return '';\n      }\n    });\n\n    _this.state = {\n      classes: _this.props.classes,\n      selectedLink: _this.props.router.route\n    }; // this.handleBrandDisplay();\n\n    return _this;\n  }\n\n  _createClass(Nav, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"nav\", {\n        style: this.state.classes.main\n      }, __jsx(NavBarBrand, {\n        brand: this.handleBrandDisplay()\n      }), __jsx(NavBarLeft, {\n        classes: this.state.classes,\n        links: this.props.links,\n        selected: this.state.selected\n      }), __jsx(NavBarRight, {\n        classes: this.state.classes['navbar-right']\n      }));\n    }\n  }]);\n\n  return Nav;\n}(Component);\n\nexport { Nav as default };","map":{"version":3,"sources":["/Users/cliff/git/next-app-pre-configured-starter/src/components/layout/1_nav/nav.js"],"names":["React","Component","NavBarBrand","NavBarLeft","NavBarRight","Nav","props","useBrandOrTitle","brand","title","state","classes","selectedLink","router","route","main","handleBrandDisplay","links","selected"],"mappings":";;;;;;;;;AAAA;;;;;;;;AAQA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,UAAP,MAAuB,gBAAvB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;;IACqBC,G;;;;;AAEnB,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN,GADiB,CAEjB;AACA;;AAHiB;;AAAA,yEAWE,YAAM;AACzB,cAAQ,MAAKA,KAAL,CAAWC,eAAnB;AACE,aAAK,OAAL;AAAc,iBAAO,MAAKD,KAAL,CAAWE,KAAlB;;AACd,aAAK,OAAL;AAAc,iBAAO,MAAKF,KAAL,CAAWG,KAAlB;;AACd,aAAK,MAAL;AAAa,iBAAO,EAAP;AAHf;AAKD,KAjBkB;;AAIjB,UAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,MAAKL,KAAL,CAAWK,OADT;AAEXC,MAAAA,YAAY,EAAE,MAAKN,KAAL,CAAWO,MAAX,CAAkBC;AAFrB,KAAb,CAJiB,CAQjB;;AARiB;AASlB;;;;6BASQ;AACP,aACE;AAAK,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,OAAX,CAAmBI;AAA/B,SACE,MAAC,WAAD;AAAa,QAAA,KAAK,EAAE,KAAKC,kBAAL;AAApB,QADF,EAEE,MAAC,UAAD;AACE,QAAA,OAAO,EAAE,KAAKN,KAAL,CAAWC,OADtB;AAEE,QAAA,KAAK,EAAE,KAAKL,KAAL,CAAWW,KAFpB;AAGE,QAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWQ;AAHvB,QAFF,EAME,MAAC,WAAD;AAAa,QAAA,OAAO,EAAE,KAAKR,KAAL,CAAWC,OAAX,CAAmB,cAAnB;AAAtB,QANF,CADF;AAUD;;;;EA/B8BV,S;;SAAZI,G","sourcesContent":["/**\n * NAV\n * INFO: App navbar classes, links,useBrandOrTitle, brand are set in ./src/config/conf.json\n * SET: classes for dynamic styling, for static styling nav.scss\n * SET: useBrandOrTitle to \"brand\" or \"title\":\n *  IF useBrandOrTitle set to \"brand\" then display custom and static brand attribute in ./src/config/conf.json \n *  TODO: IF useBrandOrTitle set to \"title\" then dynamically display \"title\" attribute per current link\n */\nimport React, { Component } from 'react';\nimport NavBarBrand from './_navbar-brand';\nimport NavBarLeft from './_navbar-left';\nimport NavBarRight from './_navbar-right';\nexport default class Nav extends Component {\n  navLinks;\n  constructor(props) {\n    super(props)\n    // console.log('NAV props: ', props);\n    // this.navLinks = this.props.config.links;\n    this.state = {\n      classes: this.props.classes,\n      selectedLink: this.props.router.route\n    }\n    // this.handleBrandDisplay();\n  }\n\n  handleBrandDisplay = () => {\n    switch (this.props.useBrandOrTitle) {\n      case 'brand': return this.props.brand;\n      case 'title': return this.props.title;\n      case 'none': return ''\n    }\n  }\n  render() {\n    return (\n      <nav style={this.state.classes.main}>\n        <NavBarBrand brand={this.handleBrandDisplay()} />\n        <NavBarLeft\n          classes={this.state.classes}\n          links={this.props.links}\n          selected={this.state.selected} />\n        <NavBarRight classes={this.state.classes['navbar-right']} />\n      </nav>\n    )\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}