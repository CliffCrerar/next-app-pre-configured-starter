{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\n/**\n * NAV\n * INFO: App navbar classes, links,useBrandOrTitle, brand are set in ./src/config/conf.json\n * SET: classes for dynamic styling, for static styling nav.scss\n * SET: useBrandOrTitle to \"brand\" or \"title\":\n *  IF useBrandOrTitle set to \"brand\" then display custom and static brand attribute in ./src/config/conf.json \n *  TODO: IF useBrandOrTitle set to \"title\" then dynamically display \"title\" attribute per current link\n */\nimport React, { Component } from 'react';\nimport NavBarBrand from './_navbar-brand';\nimport NavBarLeft from './_navbar-left';\nimport NavBarRight from './_navbar-right';\nexport default class Nav extends Component {\n  constructor(props) {\n    super(props); // console.log('NAV props: ', props);\n    // this.navLinks = this.props.config.links;\n\n    _defineProperty(this, \"navLinks\", void 0);\n\n    _defineProperty(this, \"handleBrandDisplay\", () => {\n      switch (this.props.useBrandOrTitle) {\n        case 'brand':\n          return this.props.brand;\n\n        case 'title':\n          return this.props.title;\n\n        case 'none':\n          return '';\n      }\n    });\n\n    this.state = {\n      classes: this.props.classes,\n      selectedLink: this.props.router.route\n    }; // this.handleBrandDisplay();\n  }\n\n  render() {\n    return __jsx(\"nav\", {\n      style: this.state.classes.main\n    }, __jsx(NavBarBrand, {\n      brand: this.handleBrandDisplay()\n    }), __jsx(NavBarLeft, {\n      classes: this.state.classes,\n      links: this.props.links,\n      selected: this.state.selected\n    }), __jsx(NavBarRight, {\n      classes: this.state.classes['navbar-right']\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/cliff/git/next-app-pre-configured-starter/src/components/layout/1_nav/nav.js"],"names":["React","Component","NavBarBrand","NavBarLeft","NavBarRight","Nav","constructor","props","useBrandOrTitle","brand","title","state","classes","selectedLink","router","route","render","main","handleBrandDisplay","links","selected"],"mappings":";;;AAAA;;;;;;;;AAQA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,UAAP,MAAuB,gBAAvB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,eAAe,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAEzCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAEjB;AACA;;AAHiB;;AAAA,gDAWE,MAAM;AACzB,cAAQ,KAAKA,KAAL,CAAWC,eAAnB;AACE,aAAK,OAAL;AAAc,iBAAO,KAAKD,KAAL,CAAWE,KAAlB;;AACd,aAAK,OAAL;AAAc,iBAAO,KAAKF,KAAL,CAAWG,KAAlB;;AACd,aAAK,MAAL;AAAa,iBAAO,EAAP;AAHf;AAKD,KAjBkB;;AAIjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,KAAKL,KAAL,CAAWK,OADT;AAEXC,MAAAA,YAAY,EAAE,KAAKN,KAAL,CAAWO,MAAX,CAAkBC;AAFrB,KAAb,CAJiB,CAQjB;AACD;;AASDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,OAAX,CAAmBK;AAA/B,OACE,MAAC,WAAD;AAAa,MAAA,KAAK,EAAE,KAAKC,kBAAL;AAApB,MADF,EAEE,MAAC,UAAD;AACE,MAAA,OAAO,EAAE,KAAKP,KAAL,CAAWC,OADtB;AAEE,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWY,KAFpB;AAGE,MAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWS;AAHvB,MAFF,EAME,MAAC,WAAD;AAAa,MAAA,OAAO,EAAE,KAAKT,KAAL,CAAWC,OAAX,CAAmB,cAAnB;AAAtB,MANF,CADF;AAUD;;AA/BwC","sourcesContent":["/**\n * NAV\n * INFO: App navbar classes, links,useBrandOrTitle, brand are set in ./src/config/conf.json\n * SET: classes for dynamic styling, for static styling nav.scss\n * SET: useBrandOrTitle to \"brand\" or \"title\":\n *  IF useBrandOrTitle set to \"brand\" then display custom and static brand attribute in ./src/config/conf.json \n *  TODO: IF useBrandOrTitle set to \"title\" then dynamically display \"title\" attribute per current link\n */\nimport React, { Component } from 'react';\nimport NavBarBrand from './_navbar-brand';\nimport NavBarLeft from './_navbar-left';\nimport NavBarRight from './_navbar-right';\nexport default class Nav extends Component {\n  navLinks;\n  constructor(props) {\n    super(props)\n    // console.log('NAV props: ', props);\n    // this.navLinks = this.props.config.links;\n    this.state = {\n      classes: this.props.classes,\n      selectedLink: this.props.router.route\n    }\n    // this.handleBrandDisplay();\n  }\n\n  handleBrandDisplay = () => {\n    switch (this.props.useBrandOrTitle) {\n      case 'brand': return this.props.brand;\n      case 'title': return this.props.title;\n      case 'none': return ''\n    }\n  }\n  render() {\n    return (\n      <nav style={this.state.classes.main}>\n        <NavBarBrand brand={this.handleBrandDisplay()} />\n        <NavBarLeft\n          classes={this.state.classes}\n          links={this.props.links}\n          selected={this.state.selected} />\n        <NavBarRight classes={this.state.classes['navbar-right']} />\n      </nav>\n    )\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}