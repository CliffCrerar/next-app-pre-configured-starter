{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\n/**\n * HTTP ERROR\n * INFO: This component is displayed when an http get markdown file throws an error\n */\nexport default (function (statCode, statText, errMessage) {\n  console.log('errMessage: ', errMessage);\n  console.log('statText: ', statText);\n  console.log('statCode: ', statCode);\n  var errObject, errType, message;\n\n  try {\n    errObject = JSON.parse(errMessage);\n    message = errObject.message;\n    errType = errObject.type;\n  } catch (err) {\n    errType = null;\n    message = 'Unknown Error';\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"display-error\"\n  }, __jsx(\"h1\", null, statCode, \" \", statText), __jsx(\"h4\", null, \"ERROR MESSAGE: \", __jsx(\"br\", null), message), __jsx(\"p\", null, errorInstruction(errType))));\n});\n\nfunction errorInstruction(type) {\n  switch (type) {\n    case 'invPath':\n      return \"Either path added to the config attribute 'markdown-file-paths' does not exist or was entered incorrectly\";\n\n    case 'fileNotExist':\n      return \"Check the file name that the MarkDown react component is calling, or ensure that the path where the file is has been added to the 'markdown-file-paths'.\";\n\n    case 'other':\n      'Other error';\n\n    default:\n      return '';\n  }\n}","map":{"version":3,"sources":["/Users/cliff/git/next-app-pre-configured-starter/src/components/core/markdown/_http-error.js"],"names":["statCode","statText","errMessage","console","log","errObject","errType","message","JSON","parse","type","err","errorInstruction"],"mappings":";;;AAAA;;;;AAKA,gBAAe,UAACA,QAAD,EAAWC,QAAX,EAAqBC,UAArB,EAAoC;AAC/CC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,UAA5B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,QAA1B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BJ,QAA1B;AACA,MAAIK,SAAJ,EAAcC,OAAd,EAAsBC,OAAtB;;AACA,MAAG;AACCF,IAAAA,SAAS,GAAGG,IAAI,CAACC,KAAL,CAAWP,UAAX,CAAZ;AACAK,IAAAA,OAAO,GAAGF,SAAS,CAACE,OAApB;AACAD,IAAAA,OAAO,GAAGD,SAAS,CAACK,IAApB;AACH,GAJD,CAIE,OAAMC,GAAN,EAAW;AACTL,IAAAA,OAAO,GAAG,IAAV;AACAC,IAAAA,OAAO,GAAG,eAAV;AACH;;AAED,SACI,MAAC,KAAD,CAAO,QAAP,QACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,kBAAKP,QAAL,OAAgBC,QAAhB,CADJ,EAEI,qCAAmB,iBAAnB,EAA0BM,OAA1B,CAFJ,EAGI,iBAAIK,gBAAgB,CAACN,OAAD,CAApB,CAHJ,CADJ,CADJ;AASH,CAvBD;;AAyBA,SAASM,gBAAT,CAA0BF,IAA1B,EAA+B;AAC3B,UAAOA,IAAP;AACI,SAAK,SAAL;AAAgB,aAAO,2GAAP;;AAChB,SAAK,cAAL;AAAqB,aAAO,0JAAP;;AACrB,SAAK,OAAL;AAAc;;AACd;AAAS,aAAO,EAAP;AAJb;AAMH","sourcesContent":["/**\n * HTTP ERROR\n * INFO: This component is displayed when an http get markdown file throws an error\n */\n\nexport default (statCode, statText, errMessage) => {\n    console.log('errMessage: ', errMessage);\n    console.log('statText: ', statText);\n    console.log('statCode: ', statCode);\n    let errObject,errType,message;\n    try{\n        errObject = JSON.parse(errMessage);\n        message = errObject.message;\n        errType = errObject.type;\n    } catch(err) {\n        errType = null;\n        message = 'Unknown Error';\n    }\n    \n    return (\n        <React.Fragment>\n            <div className=\"display-error\">\n                <h1>{statCode} {statText}</h1>\n                <h4>ERROR MESSAGE: <br />{message}</h4>\n                <p>{errorInstruction(errType)}</p>\n            </div>\n        </React.Fragment>\n    )\n}\n\nfunction errorInstruction(type){\n    switch(type){\n        case 'invPath': return \"Either path added to the config attribute 'markdown-file-paths' does not exist or was entered incorrectly\";\n        case 'fileNotExist': return \"Check the file name that the MarkDown react component is calling, or ensure that the path where the file is has been added to the 'markdown-file-paths'.\"\n        case 'other': 'Other error';\n        default: return '';\n    }\n}"]},"metadata":{},"sourceType":"module"}