{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nvar _markdownItLinkAttributes = _interopRequireDefault(require(\"markdown-it-link-attributes\"));\n\nvar _markdownIt = _interopRequireDefault(require(\"markdown-it\"));\n\nvar _markdownItAttrs = _interopRequireDefault(require(\"markdown-it-attrs\"));\n\nvar _mdOpts = _interopRequireDefault(require(\"./_md-opts\"));\n\n/**\n * Customise MD IT\n */\n// Markdown it and plugins import\n// import emoji from 'markdown-it-emoji';\nvar getMarkDownIt = function getMarkDownIt(config) {\n  // console.log('MD props: ', config);\n  var _options = (0, _mdOpts[\"default\"])(config),\n      markDownItOptions = _options.markDownItOptions,\n      lintAttributeOptions = _options.lintAttributeOptions;\n\n  return new _markdownIt[\"default\"](markDownItOptions) //.use(emoji)\n  .use(_markdownItAttrs[\"default\"]).use(_markdownItLinkAttributes[\"default\"], lintAttributeOptions);\n};\n\nmodule.exports = getMarkDownIt;","map":{"version":3,"sources":["/Users/cliff/git/next-app-pre-configured-starter/src/components/core/markdown/_md-it.js"],"names":["getMarkDownIt","config","markDownItOptions","lintAttributeOptions","markdown","use","attrs","mila","module","exports"],"mappings":";;;;AAMA;;AACA;;AACA;;AACA;;AATA;;;AAIA;AACA;AAMA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,MAAD,EAAY;AAC1B;AAD0B,iBAEuB,wBAAQA,MAAR,CAFvB;AAAA,MAEnBC,iBAFmB,YAEnBA,iBAFmB;AAAA,MAEDC,oBAFC,YAEDA,oBAFC;;AAG1B,SAAO,IAAIC,sBAAJ,CAAaF,iBAAb,EACC;AADD,GAEEG,GAFF,CAEMC,2BAFN,EAGED,GAHF,CAGME,oCAHN,EAGWJ,oBAHX,CAAP;AAKP,CARD;;AAUAK,MAAM,CAACC,OAAP,GAAiBT,aAAjB","sourcesContent":["/**\n * Customise MD IT\n */\n\n// Markdown it and plugins import\n// import emoji from 'markdown-it-emoji';\nimport mila from 'markdown-it-link-attributes';\nimport markdown from 'markdown-it';\nimport attrs from 'markdown-it-attrs';\nimport options from './_md-opts';\n\nconst getMarkDownIt = (config) => {\n        // console.log('MD props: ', config);\n        const {markDownItOptions,lintAttributeOptions} = options(config);\n        return new markdown(markDownItOptions)\n                //.use(emoji)\n                .use(attrs)\n                .use(mila,lintAttributeOptions);\n\n}\n\nmodule.exports = getMarkDownIt;"]},"metadata":{},"sourceType":"script"}